<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.44.1 (20200629.0846)
 -->
<!-- Title: g Pages: 1 -->
<svg width="812pt" height="394pt"
 viewBox="0.00 0.00 811.67 394.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 390)">
<title>g</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-390 807.67,-390 807.67,4 -4,4"/>
<g id="clust5" class="cluster">
<title>cluster_72692217</title>
<polygon fill="#ececec" stroke="black" points="8,-152 8,-270 123.9,-270 123.9,-152 8,-152"/>
<text text-anchor="middle" x="45.94" y="-253.4" font-family="Times New Roman,serif" font-size="14.00">APSDemo</text>
</g>
<g id="clust6" class="cluster">
<title>cluster_1996272928</title>
<polygon fill="white" stroke="black" points="16,-160 16,-237 115.9,-237 115.9,-160 16,-160"/>
<text text-anchor="middle" x="53.94" y="-220.4" font-family="Times New Roman,serif" font-size="14.00">APSDemo</text>
</g>
<g id="clust1" class="cluster">
<title>cluster_65028</title>
<polygon fill="#ececec" stroke="black" points="131.9,-44 131.9,-378 733.65,-378 733.65,-44 131.9,-44"/>
<text text-anchor="middle" x="152.74" y="-361.4" font-family="Times New Roman,serif" font-size="14.00">APS</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_1272847639</title>
<polygon fill="white" stroke="black" points="504,-214 504,-345 715.47,-345 715.47,-214 504,-214"/>
<text text-anchor="middle" x="536.49" y="-328.4" font-family="Times New Roman,serif" font-size="14.00">Machine</text>
</g>
<g id="clust4" class="cluster">
<title>cluster_2142191325</title>
<polygon fill="white" stroke="black" points="139.9,-52 139.9,-345 387.8,-345 387.8,-52 139.9,-52"/>
<text text-anchor="middle" x="175.89" y="-328.4" font-family="Times New Roman,serif" font-size="14.00">Scheduler</text>
</g>
<g id="clust3" class="cluster">
<title>cluster_1316370379</title>
<polygon fill="white" stroke="black" points="493.83,-75 493.83,-206 725.65,-206 725.65,-75 493.83,-75"/>
<text text-anchor="middle" x="527.49" y="-189.4" font-family="Times New Roman,serif" font-size="14.00">Schedule</text>
</g>
<!-- Machine1858361680XXXcheckViableOrder104431 -->
<g id="node1" class="node">
<title>Machine1858361680XXXcheckViableOrder104431</title>
<g id="a_node1"><a xlink:title="Machine&#10;&#10;&#10; &#160;Check if the product type can be produced on the machine&#10; &#10; &#160;@param production_type_ID ID of the &lt;strong&gt;production type&lt;/strong&gt;,&#10; &#160;@return return true if the product type can be produced on the machine&#10; &#160;@apiNote production ID is &lt;strong&gt;NOT&lt;/strong&gt; the order ID&#10; ">
<ellipse fill="white" stroke="black" cx="609.74" cy="-294" rx="96.2" ry="18"/>
<text text-anchor="middle" x="609.74" y="-289.8" font-family="Times New Roman,serif" font-size="14.00" fill="darkgreen">+ checkViableOrder()</text>
</a>
</g>
</g>
<!-- Machine1858361680XXXgetProductionPace104431 -->
<g id="node2" class="node">
<title>Machine1858361680XXXgetProductionPace104431</title>
<g id="a_node2"><a xlink:title="Machine&#10;&#10;&#10; &#160;get the production pace f the specific production type&#10; &#10; &#160;@param production_type_id ID of the &lt;strong&gt;production type&lt;/strong&gt;,&#10; &#160;@return return the pace per hour of given production type. return &#45;1 if not&#10; &#160;found the production type&#10; &#160;@apiNote production ID is &lt;strong&gt;NOT&lt;/strong&gt; the order ID&#10; ">
<ellipse fill="white" stroke="black" cx="609.74" cy="-240" rx="97.97" ry="18"/>
<text text-anchor="middle" x="609.74" y="-235.8" font-family="Times New Roman,serif" font-size="14.00" fill="darkgreen">+ getProductionPace()</text>
</a>
</g>
</g>
<!-- Schedule1858361680XXXcalcGradeByWeights1777557836 -->
<g id="node3" class="node">
<title>Schedule1858361680XXXcalcGradeByWeights1777557836</title>
<g id="a_node3"><a xlink:title="Schedule&#10;&#10;&#10; &#160;Calculate the Grade based on the weights and stats calculated before.&#10; &#160;&lt;p&gt;&lt;strong&gt;call {@link Schedule#calcStat(double, int)}&lt;/strong&gt; first to&#10; &#160;make sure the stats are correctly calculated!&#10; &#160;&lt;/p&gt;&#10; &#10; &#160;@param on_time_weight weight for the on time percentage&#10; &#160;@param makespan_weight weight for the makespan percentage&#10; &#160;@param est_weight weight for the earliest start time percentage&#10; &#160;@param ldt_weight weight for the latest due time percentage&#10; &#160;@return the Grade with percentage&#10; &#160;@note we can have weights in any kind of size&#10; &#160;@see Grade#calcGradeByWeights(int, int, int, int)&#10; &#160;@see Grade&#10; ">
<ellipse fill="white" stroke="black" cx="609.74" cy="-101" rx="107.82" ry="18"/>
<text text-anchor="middle" x="609.74" y="-96.8" font-family="Times New Roman,serif" font-size="14.00" fill="darkgreen">+ calcGradeByWeights()</text>
</a>
</g>
</g>
<!-- Schedule1858361680XXXgetMachine104431 -->
<g id="node4" class="node">
<title>Schedule1858361680XXXgetMachine104431</title>
<g id="a_node4"><a xlink:title="Schedule&#10;&#10;&#10; &#160;@param i the index of the machine&#10; &#160;@return the machine at index i&#10; &#160;@throws IndexOutOfBoundsException if the index is out of bounds&#10; ">
<ellipse fill="white" stroke="black" cx="609.74" cy="-155" rx="70.82" ry="18"/>
<text text-anchor="middle" x="609.74" y="-150.8" font-family="Times New Roman,serif" font-size="14.00" fill="darkgreen">+ getMachine()</text>
</a>
</g>
</g>
<!-- Scheduler1858361680XXXcalcAllSchedulesGrade79535248 -->
<g id="node5" class="node">
<title>Scheduler1858361680XXXcalcAllSchedulesGrade79535248</title>
<g id="a_node5"><a xlink:title="Scheduler&#10;&#10;&#10; &#160;Calculate the grade for all schedules based on the weights given&#10; &#10; &#160;@param weights the weights for on_time, makespan, est_violate, ldt_violate.&#10; if not given, the default weights are used: on_time: 40,&#10; makespan: 30, est_violate: 15, ldt_violate: 15&#10; &#160;@apiNote The Schedules will be sorted by grade in descending order after&#10; &#160;the call&#10; &#160;@see Schedule#calcGradeByWeights(int, int, int, int)&#10; ">
<ellipse fill="white" stroke="black" cx="263.85" cy="-186" rx="115.9" ry="18"/>
<text text-anchor="middle" x="263.85" y="-181.8" font-family="Times New Roman,serif" font-size="14.00" fill="darkgreen">+ calcAllSchedulesGrade()</text>
</a>
</g>
</g>
<!-- Scheduler1858361680XXXcalcAllSchedulesGrade79535248&#45;&gt;Schedule1858361680XXXcalcGradeByWeights1777557836 -->
<g id="edge7" class="edge">
<title>Scheduler1858361680XXXcalcAllSchedulesGrade79535248&#45;&gt;Schedule1858361680XXXcalcGradeByWeights1777557836</title>
<path fill="none" stroke="black" d="M331.72,-171.31C360.56,-164.98 387.8,-159 387.8,-159 387.8,-159 415.8,-128 415.8,-128 415.8,-128 466.85,-120.86 516.43,-113.92"/>
<polygon fill="black" stroke="black" points="517.22,-117.34 526.63,-112.49 516.25,-110.41 517.22,-117.34"/>
</g>
<!-- OrderWithTime1316370379XXXstatusCheck0 -->
<g id="node11" class="node">
<title>OrderWithTime1316370379XXXstatusCheck0</title>
<ellipse fill="none" stroke="black" cx="609.74" cy="-18" rx="193.87" ry="18"/>
<text text-anchor="middle" x="609.74" y="-13.8" font-family="Times New Roman,serif" font-size="14.00">OrderWithTime1316370379XXXstatusCheck0</text>
</g>
<!-- Scheduler1858361680XXXcalcAllSchedulesGrade79535248&#45;&gt;OrderWithTime1316370379XXXstatusCheck0 -->
<g id="edge6" class="edge">
<title>Scheduler1858361680XXXcalcAllSchedulesGrade79535248&#45;&gt;OrderWithTime1316370379XXXstatusCheck0</title>
<path fill="none" stroke="black" d="M331.72,-171.31C360.56,-164.98 387.8,-159 387.8,-159 387.8,-159 415.8,-71 415.8,-71 415.8,-71 482.03,-52.81 536.89,-37.74"/>
<polygon fill="black" stroke="black" points="537.91,-41.09 546.63,-35.06 536.06,-34.34 537.91,-41.09"/>
</g>
<!-- Scheduler1858361680XXXcreateChart633276745 -->
<g id="node6" class="node">
<title>Scheduler1858361680XXXcreateChart633276745</title>
<g id="a_node6"><a xlink:title="Scheduler&#10;&#10;&#10; &#160;Create a GanttChart of the schedule&#10; &#10; &#160;@param schedule the schedule to be displayed&#10; &#160;@return the {@link GanttChart} of the schedule&#10; &#160;@apiNote we need the Scheduler to calculate the switch time between&#10; &#160;different order types, so it is not static&#10; ">
<ellipse fill="white" stroke="black" cx="263.85" cy="-240" rx="69.65" ry="18"/>
<text text-anchor="middle" x="263.85" y="-235.8" font-family="Times New Roman,serif" font-size="14.00" fill="darkgreen">+ createChart()</text>
</a>
</g>
</g>
<!-- Scheduler1858361680XXXgenerateAllPossible0 -->
<g id="node7" class="node">
<title>Scheduler1858361680XXXgenerateAllPossible0</title>
<g id="a_node7"><a xlink:title="Scheduler&#10;&#10;&#10; &#160;Generate all possible schedules&#10; &#160;&lt;p&gt;&#10; &#160;Generate all possible schedules by DFS and store them in the _schedules&#10; &#160;list&#10; &#160;&lt;/p&gt;&#10; &#10; &#160;@see Scheduler#depthFirstSearch(int, Schedule)&#10; ">
<ellipse fill="white" stroke="black" cx="263.85" cy="-294" rx="102.61" ry="18"/>
<text text-anchor="middle" x="263.85" y="-289.8" font-family="Times New Roman,serif" font-size="14.00" fill="darkgreen">+ generateAllPossible()</text>
</a>
</g>
</g>
<!-- Scheduler1858361680XXXgenerateAllPossible0&#45;&gt;Machine1858361680XXXcheckViableOrder104431 -->
<g id="edge8" class="edge">
<title>Scheduler1858361680XXXgenerateAllPossible0&#45;&gt;Machine1858361680XXXcheckViableOrder104431</title>
<path fill="none" stroke="black" d="M366.63,-294C409.72,-294 459.9,-294 503.37,-294"/>
<polygon fill="black" stroke="black" points="503.4,-297.5 513.4,-294 503.4,-290.5 503.4,-297.5"/>
</g>
<!-- Scheduler1858361680XXXgenerateAllPossible0&#45;&gt;Machine1858361680XXXgetProductionPace104431 -->
<g id="edge9" class="edge">
<title>Scheduler1858361680XXXgenerateAllPossible0&#45;&gt;Machine1858361680XXXgetProductionPace104431</title>
<path fill="none" stroke="black" d="M336.35,-281.21C375.36,-274.23 415.8,-267 415.8,-267 415.8,-267 470.2,-259.39 521.23,-252.25"/>
<polygon fill="black" stroke="black" points="521.96,-255.68 531.37,-250.83 520.99,-248.75 521.96,-255.68"/>
</g>
<!-- Scheduler1858361680XXXgenerateAllPossible0&#45;&gt;Schedule1858361680XXXgetMachine104431 -->
<g id="edge10" class="edge">
<title>Scheduler1858361680XXXgenerateAllPossible0&#45;&gt;Schedule1858361680XXXgetMachine104431</title>
<path fill="none" stroke="black" d="M328.85,-279.95C358.72,-273.39 387.8,-267 387.8,-267 387.8,-267 415.8,-210 415.8,-210 415.8,-210 494.99,-187.42 551.91,-171.2"/>
<polygon fill="black" stroke="black" points="552.88,-174.56 561.54,-168.45 550.96,-167.83 552.88,-174.56"/>
</g>
<!-- Scheduler1858361680XXXgetBestSchedule104431 -->
<g id="node8" class="node">
<title>Scheduler1858361680XXXgetBestSchedule104431</title>
<g id="a_node8"><a xlink:title="Scheduler&#10;&#10;&#10; &#160;@param num if num is positive, return the first num schedules; if num is&#10; negative, return the last num schedules; if num is zero, return&#10; all schedules&#10; &#160;@return the list of the best schedules&#10; &#160;@apiNote Need to first call&#10; &#160;{@link Scheduler#calcAllSchedulesGrade(Integer...)} to get a sorted list of&#10; &#160;schedules otherwise is just a list of schedules!&#10; &#160;@see Scheduler#calcAllSchedulesGrade(Integer...)&#10; &#160;@see Schedule#scheduleAllOrders(Scheduler)&#10; ">
<ellipse fill="white" stroke="black" cx="263.85" cy="-132" rx="89.88" ry="18"/>
<text text-anchor="middle" x="263.85" y="-127.8" font-family="Times New Roman,serif" font-size="14.00" fill="darkgreen">+ getBestSchedule()</text>
</a>
</g>
</g>
<!-- Scheduler1858361680XXXinitRandom1503934682 -->
<g id="node9" class="node">
<title>Scheduler1858361680XXXinitRandom1503934682</title>
<g id="a_node9"><a xlink:title="Scheduler&#10;&#10;&#10; &#160;The init method to initialize the Scheduler with random orders and machines&#10; &#160;just use for demo/test&#10; &#10; &#160;@param num_order_types the number of order types&#10; &#160;@param num_machines the number of machines&#10; &#160;@param num_orders the number of orders&#10; &#160;@param max_hours_allowedthe maximum hours allowed for all orders to&#10; &#160;be scheduled&#10; &#160;@param max_capacity_per_machine the maximum capacity that can be Overload&#10; &#160;on a machine&#10; &#160;@param min_capacity_per_machine the minimum capacity that a machine can&#10; &#160;work&#10; &#160;@param seed the random seed&#10; &#160;@throws AssertionError if the number of order types, machines, orders, max&#10; hours allowed, max capacity per machine, min&#10; capacity per machine is less than or equal to zero&#10; or the max capacity per machine is less than the min&#10; capacity per machine&#10; &#160;@see Scheduler#init(int, int, int, int, double, double, ArrayList,&#10; &#160;ArrayList, ArrayList)&#10; ">
<ellipse fill="white" stroke="black" cx="263.85" cy="-78" rx="70.86" ry="18"/>
<text text-anchor="middle" x="263.85" y="-73.8" font-family="Times New Roman,serif" font-size="14.00" fill="darkgreen">+ initRandom()</text>
</a>
</g>
</g>
<!-- APSDemo72692217XXXstart80204510 -->
<g id="node10" class="node">
<title>APSDemo72692217XXXstart80204510</title>
<g id="a_node10"><a xlink:title="APSDemo&#10;&#10;&#10; &#160;The main demo method for the ygong.APSDemo application&#10; &#160;@param stage the primary stage for this application&#10; ">
<ellipse fill="white" stroke="black" stroke-width="4" cx="65.95" cy="-186" rx="41.9" ry="18"/>
<text text-anchor="middle" x="65.95" y="-181.8" font-family="Times New Roman,serif" font-size="14.00" fill="darkgreen">+ start()</text>
</a>
</g>
</g>
<!-- APSDemo72692217XXXstart80204510&#45;&gt;Scheduler1858361680XXXcalcAllSchedulesGrade79535248 -->
<g id="edge2" class="edge">
<title>APSDemo72692217XXXstart80204510&#45;&gt;Scheduler1858361680XXXcalcAllSchedulesGrade79535248</title>
<path fill="none" stroke="black" d="M108.02,-186C117.03,-186 127.03,-186 137.47,-186"/>
<polygon fill="black" stroke="black" points="137.61,-189.5 147.61,-186 137.61,-182.5 137.61,-189.5"/>
</g>
<!-- APSDemo72692217XXXstart80204510&#45;&gt;Scheduler1858361680XXXcreateChart633276745 -->
<g id="edge3" class="edge">
<title>APSDemo72692217XXXstart80204510&#45;&gt;Scheduler1858361680XXXcreateChart633276745</title>
<path fill="none" stroke="black" d="M96.76,-198.39C113.84,-205.49 131.9,-213 131.9,-213 131.9,-213 165.75,-219.98 199.03,-226.84"/>
<polygon fill="black" stroke="black" points="198.33,-230.27 208.83,-228.86 199.74,-223.41 198.33,-230.27"/>
</g>
<!-- APSDemo72692217XXXstart80204510&#45;&gt;Scheduler1858361680XXXgenerateAllPossible0 -->
<g id="edge4" class="edge">
<title>APSDemo72692217XXXstart80204510&#45;&gt;Scheduler1858361680XXXgenerateAllPossible0</title>
<path fill="none" stroke="black" d="M80.72,-203.18C99.79,-226.95 131.9,-267 131.9,-267 131.9,-267 157.91,-272.36 186.75,-278.31"/>
<polygon fill="black" stroke="black" points="186.11,-281.75 196.61,-280.34 187.52,-274.89 186.11,-281.75"/>
</g>
<!-- APSDemo72692217XXXstart80204510&#45;&gt;Scheduler1858361680XXXgetBestSchedule104431 -->
<g id="edge5" class="edge">
<title>APSDemo72692217XXXstart80204510&#45;&gt;Scheduler1858361680XXXgetBestSchedule104431</title>
<path fill="none" stroke="black" d="M96.76,-173.61C113.84,-166.51 131.9,-159 131.9,-159 131.9,-159 160.25,-153.16 190.56,-146.9"/>
<polygon fill="black" stroke="black" points="191.36,-150.31 200.44,-144.87 189.94,-143.46 191.36,-150.31"/>
</g>
<!-- APSDemo72692217XXXstart80204510&#45;&gt;Scheduler1858361680XXXinitRandom1503934682 -->
<g id="edge1" class="edge">
<title>APSDemo72692217XXXstart80204510&#45;&gt;Scheduler1858361680XXXinitRandom1503934682</title>
<path fill="none" stroke="black" d="M80.72,-168.82C99.79,-145.05 131.9,-105 131.9,-105 131.9,-105 164.99,-98.18 197.9,-91.39"/>
<polygon fill="black" stroke="black" points="198.99,-94.74 208.07,-89.29 197.57,-87.89 198.99,-94.74"/>
</g>
</g>
</svg>
